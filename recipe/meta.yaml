{% set name = "elegant" %}
{% set version = "2023.3.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://ops.aps.anl.gov/downloads/elegant.{{ version }}.tar.gz
    sha256: 48efea2f34d055807f7ae6b31c1f115ab75730743c1c238873fa9c83e8f48085
    folder: src/elegant
  - url: https://ops.aps.anl.gov/downloads/oag.apps.configure.tar.gz
    sha256: eef0912a70b069e55d1df24cd008f42e6a5923e35461f2b69f92cd1e7e2d4596
    folder: src/oag-apps
  - url: https://ops.aps.anl.gov/downloads/SDDS.5.5.tar.gz
    sha256: c07823e10ba75bea4d6277a2cddf126f366e4ea563fea3967dd8268c7a13be2a
    folder: src/sdds
  - url: https://ops.aps.anl.gov/downloads/epics.base.configure.tar.gz
    sha256: d18a5a1dd58ab485df32a55a32f0f2a7517b6a5361439208dc38d2fe69f6e22e
    folder: src/epics-base
  - url: https://ops.aps.anl.gov/downloads/epics.extensions.configure.tar.gz
    sha256: 46db83bf7e0cc70be663a822e4cb229cb03f52e98e6920fbc1ce181df9eac59b
    folder: src/epics-extensions

build:
  skip: true  # [win]
  skip: true  # [py<310]
  number: 0
  ignore_run_exports:
    # libsz/libaec used in hdf2sdds/sdds2hdf:
    - libaec
    # Darwin-only; linked in sdds2tiff/tiff2sdds
    - zstd  # [osx]
    - libgomp  # [linux]
    - libblas  # [linux]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - {{ compiler("fortran") }}
    - mpich
    - make
  host:
    - blas * *openblas
    - libopenblas
    - libblas * *openblas  # [linux]
    - liblapack * *openblas  # [linux]
    - fftw * mpi_mpich_*
    - gsl
    - hdf5 * mpi_mpich_*
    - libaec
    - libgd
    - libgomp  # [linux]
    - libpng
    - libtiff
    - mpi * mpich*
    - mpich
    - ncurses
    - python
    - xz
    - zlib
    - zstd  # [osx]
  run:
    - python

test:
  imports:
    - sdds
    - sddsdata
  commands:
    - test -f $PREFIX/bin/Pelegant  # [unix]
    - Pelegant
    - test -f $PREFIX/bin/elegant  # [unix]
    - elegant
    # These are skipped on macOS at the moment - sddscontour:
    - test -f $PREFIX/bin/sddscontour  # [linux]
    - test -f $PREFIX/bin/sddscongen  # [linux]
    - test -f $PREFIX/bin/sddshist2d  # [linux]
    - test -f $PREFIX/bin/sddsimageconvert  # [linux]
    # These are skipped on macOS at the moment - pseudoInverse:
    - test -f $PREFIX/bin/sdds2dpfit  # [linux]
    - test -f $PREFIX/bin/sddsica  # [linux]
    - test -f $PREFIX/bin/sddsmatrixop  # [linux]
    - test -f $PREFIX/bin/sddspseudoinverse  # [linux]
    # Pelegant supporting applications:
    - test -f $PREFIX/bin/TFS2sdds  # [unix]
    - test -f $PREFIX/bin/applicationBrowse  # [unix]
    - test -f $PREFIX/bin/applicationPatch  # [unix]
    - test -f $PREFIX/bin/applicationSubmit  # [unix]
    - test -f $PREFIX/bin/beamlineDownTime  # [unix]
    - test -f $PREFIX/bin/carriageReturn2newline  # [unix]
    - test -f $PREFIX/bin/checkRequestFile  # [unix]
    - test -f $PREFIX/bin/citi2sdds  # [unix]
    - test -f $PREFIX/bin/clearPatch  # [unix]
    - test -f $PREFIX/bin/col2sdds  # [unix]
    - test -f $PREFIX/bin/convert_to_bdd  # [unix]
    - test -f $PREFIX/bin/csv2sdds  # [unix]
    - test -f $PREFIX/bin/editstring  # [unix]
    - test -f $PREFIX/bin/elegant2genesis  # [unix]
    - test -f $PREFIX/bin/hdf2sdds  # [unix]
    - test -f $PREFIX/bin/hpif2sdds  # [unix]
    - test -f $PREFIX/bin/hpwf2sdds  # [unix]
    - test -f $PREFIX/bin/if2pf  # [unix]
    - test -f $PREFIX/bin/image2sdds  # [unix]
    - test -f $PREFIX/bin/isFileLocked  # [unix]
    - test -f $PREFIX/bin/lba2sdds  # [unix]
    - test -f $PREFIX/bin/mcs2sdds  # [unix]
    - test -f $PREFIX/bin/mecho  # [unix]
    - test -f $PREFIX/bin/minpath  # [unix]
    - test -f $PREFIX/bin/mpl2sdds  # [unix]
    - test -f $PREFIX/bin/nlpp  # [unix]
    - test -f $PREFIX/bin/normalizeFlagData  # [unix]
    - test -f $PREFIX/bin/plaindata2sdds  # [unix]
    - test -f $PREFIX/bin/pvsearch  # [unix]
    - test -f $PREFIX/bin/raw2sdds  # [unix]
    - test -f $PREFIX/bin/replace  # [unix]
    - test -f $PREFIX/bin/replaceText  # [unix]
    - test -f $PREFIX/bin/rpn  # [unix]
    - test -f $PREFIX/bin/rpnl  # [unix]
    - test -f $PREFIX/bin/runAPSStartSROrbitControllaw  # [unix]
    - test -f $PREFIX/bin/sdds2dfft  # [unix]
    - test -f $PREFIX/bin/sdds2dinterpolate  # [unix]
    - test -f $PREFIX/bin/sdds2hdf  # [unix]
    - test -f $PREFIX/bin/sdds2headlessdata  # [unix]
    - test -f $PREFIX/bin/sdds2math  # [unix]
    - test -f $PREFIX/bin/sdds2mpl  # [unix]
    - test -f $PREFIX/bin/sdds2plaindata  # [unix]
    - test -f $PREFIX/bin/sdds2spreadsheet  # [unix]
    - test -f $PREFIX/bin/sdds2stl  # [unix]
    - test -f $PREFIX/bin/sdds2stream  # [unix]
    - test -f $PREFIX/bin/sdds2tiff  # [unix]
    - test -f $PREFIX/bin/sddsDiskUsage  # [unix]
    - test -f $PREFIX/bin/sddsanalyticsignal  # [unix]
    - test -f $PREFIX/bin/sddsarray2column  # [unix]
    - test -f $PREFIX/bin/sddsbaseline  # [unix]
    - test -f $PREFIX/bin/sddsbinarystring  # [unix]
    - test -f $PREFIX/bin/sddsbreak  # [unix]
    - test -f $PREFIX/bin/sddscast  # [unix]
    - test -f $PREFIX/bin/sddschanges  # [unix]
    - test -f $PREFIX/bin/sddscheck  # [unix]
    - test -f $PREFIX/bin/sddscliptails  # [unix]
    - test -f $PREFIX/bin/sddscollapse  # [unix]
    - test -f $PREFIX/bin/sddscollect  # [unix]
    - test -f $PREFIX/bin/sddscombine  # [unix]
    - test -f $PREFIX/bin/sddscombinelogfiles  # [unix]
    - test -f $PREFIX/bin/sddsconvert  # [unix]
    - test -f $PREFIX/bin/sddsconvertlogonchange  # [unix]
    - test -f $PREFIX/bin/sddsconvolve  # [unix]
    - test -f $PREFIX/bin/sddscorrelate  # [unix]
    - test -f $PREFIX/bin/sddsderef  # [unix]
    - test -f $PREFIX/bin/sddsderiv  # [unix]
    - test -f $PREFIX/bin/sddsdiff  # [unix]
    - test -f $PREFIX/bin/sddsdigfilter  # [unix]
    - test -f $PREFIX/bin/sddsdistest  # [unix]
    - test -f $PREFIX/bin/sddsduplicate  # [unix]
    - test -f $PREFIX/bin/sddsendian  # [unix]
    - test -f $PREFIX/bin/sddsenvelope  # [unix]
    - test -f $PREFIX/bin/sddseventhist  # [unix]
    - test -f $PREFIX/bin/sddsexpand  # [unix]
    - test -f $PREFIX/bin/sddsexpfit  # [unix]
    - test -f $PREFIX/bin/sddsfdfilter  # [unix]
    - test -f $PREFIX/bin/sddsfft  # [unix]
    - test -f $PREFIX/bin/sddsfindin2dgrid  # [unix]
    - test -f $PREFIX/bin/sddsgenericfit  # [unix]
    - test -f $PREFIX/bin/sddsgfit  # [unix]
    - test -f $PREFIX/bin/sddshist  # [unix]
    - test -f $PREFIX/bin/sddsimageprofiles  # [unix]
    - test -f $PREFIX/bin/sddsinsideboundaries  # [unix]
    - test -f $PREFIX/bin/sddsinteg  # [unix]
    - test -f $PREFIX/bin/sddsinterp  # [unix]
    - test -f $PREFIX/bin/sddsinterpset  # [unix]
    - test -f $PREFIX/bin/sddslogclient  # [unix]
    - test -f $PREFIX/bin/sddslogserver  # [unix]
    - test -f $PREFIX/bin/sddslorentzianfit  # [unix]
    - test -f $PREFIX/bin/sddsmakedataset  # [unix]
    - test -f $PREFIX/bin/sddsmatrix2column  # [unix]
    - test -f $PREFIX/bin/sddsmatrixmult  # [unix]
    - test -f $PREFIX/bin/sddsminterp  # [unix]
    - test -f $PREFIX/bin/sddsmpfit  # [unix]
    - test -f $PREFIX/bin/sddsmselect  # [unix]
    - test -f $PREFIX/bin/sddsmultihist  # [unix]
    - test -f $PREFIX/bin/sddsmxref  # [unix]
    - test -f $PREFIX/bin/sddsnaff  # [unix]
    - test -f $PREFIX/bin/sddsnormalize  # [unix]
    - test -f $PREFIX/bin/sddsoutlier  # [unix]
    - test -f $PREFIX/bin/sddspeakfind  # [unix]
    - test -f $PREFIX/bin/sddspfit  # [unix]
    - test -f $PREFIX/bin/sddsplot  # [unix]
    - test -f $PREFIX/bin/sddspoly  # [unix]
    - test -f $PREFIX/bin/sddsprintout  # [unix]
    - test -f $PREFIX/bin/sddsprocess  # [unix]
    - test -f $PREFIX/bin/sddsquery  # [unix]
    - test -f $PREFIX/bin/sddsregroup  # [unix]
    - test -f $PREFIX/bin/sddsremoveoffsets  # [unix]
    - test -f $PREFIX/bin/sddsrespmatrixderivative  # [unix]
    - test -f $PREFIX/bin/sddsrowstats  # [unix]
    - test -f $PREFIX/bin/sddsrunstats  # [unix]
    - test -f $PREFIX/bin/sddssampledist  # [unix]
    - test -f $PREFIX/bin/sddsselect  # [unix]
    - test -f $PREFIX/bin/sddsseparate  # [unix]
    - test -f $PREFIX/bin/sddssequence  # [unix]
    - test -f $PREFIX/bin/sddsshift  # [unix]
    - test -f $PREFIX/bin/sddsshiftcor  # [unix]
    - test -f $PREFIX/bin/sddssinefit  # [unix]
    - test -f $PREFIX/bin/sddsslopes  # [unix]
    - test -f $PREFIX/bin/sddssmooth  # [unix]
    - test -f $PREFIX/bin/sddssnap2grid  # [unix]
    - test -f $PREFIX/bin/sddssort  # [unix]
    - test -f $PREFIX/bin/sddssortcolumn  # [unix]
    - test -f $PREFIX/bin/sddssplit  # [unix]
    - test -f $PREFIX/bin/sddsspotanalysis  # [unix]
    - test -f $PREFIX/bin/sddstdrpeeling  # [unix]
    - test -f $PREFIX/bin/sddstimeconvert  # [unix]
    - test -f $PREFIX/bin/sddstranspose  # [unix]
    - test -f $PREFIX/bin/sddsunwrap  # [unix]
    - test -f $PREFIX/bin/sddsvslopes  # [unix]
    - test -f $PREFIX/bin/sddsxref  # [unix]
    - test -f $PREFIX/bin/sddszerofind  # [unix]
    - test -f $PREFIX/bin/startFirefox  # [unix]
    - test -f $PREFIX/bin/tcomp  # [unix]
    - test -f $PREFIX/bin/tdms2sdds  # [unix]
    - test -f $PREFIX/bin/tek2sdds  # [unix]
    - test -f $PREFIX/bin/testlock  # [unix]
    - test -f $PREFIX/bin/tiff2sdds  # [unix]
    - test -f $PREFIX/bin/timeconvert  # [unix]
    - test -f $PREFIX/bin/tmpname  # [unix]
    - test -f $PREFIX/bin/token  # [unix]
    - test -f $PREFIX/bin/wfm2sdds  # [unix]

about:
  home: https://www.aps.anl.gov/Accelerator-Operations-Physics/Software
  license: EPICS
  license_file:
    - oag/apps/src/elegant/LICENSE
    - fdlibm_license.txt
    - meschach_license.txt
    - pgapack_license.txt
    - xlslib_license.txt
  summary: |
    Pelegant is Parallel Elegant, a parallelized accelerator code that
    computes beta functions, matrices, orbits, floor coordinates, amplification
    factors, dynamic aperture, and more
  description: |
    Elegant is an accelerator code that computes beta functions, matrices,
    orbits, floor coordinates, amplification factors, dynamic aperture, and
    more. It does 6-D tracking with matrices and/or canonical integrators, and
    supports a variety of time-dependent elements. It also does optimization
    (e.g., matching), including optimization of tracking results. It is the
    principle accelerator code used at APS.
  doc_url: https://ops.aps.anl.gov/manuals/elegant_latest/elegant.html
  dev_url: https://www.aps.anl.gov/Accelerator-Operations-Physics/Software

extra:
  recipe-maintainers:
    - ken-lauer
